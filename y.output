State 36 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 38 conflicts: 6 shift/reduce
State 39 conflicts: 2 shift/reduce
State 40 conflicts: 3 shift/reduce
State 42 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 108 conflicts: 6 shift/reduce
State 109 conflicts: 2 shift/reduce
State 110 conflicts: 3 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: Statement StatementList
    3              | Statement

    4 Statement: DeclarationStmt
    5          | ExpressionStmt
    6          | AssignmentStmt
    7          | IncDecStmt
    8          | Block
    9          | IfStmt
   10          | WhileStmt
   11          | ForStmt
   12          | PrintStmt

   13 DeclarationStmt: Type IDENT SEMICOLON
   14                | Type IDENT '[' Expression ']' SEMICOLON
   15                | Type IDENT ASSIGN Expression SEMICOLON
   16                | Type IDENT '[' Expression ']' ASSIGN Expression SEMICOLON

   17 ExpressionStmt: Expression SEMICOLON

   18 AssignmentStmt: AssignmentExpr SEMICOLON

   19 $@1: %empty

   20 AssignmentExpr: Expression $@1 Assign_op Expression

   21 IncDecStmt: IncDecExpr SEMICOLON

   22 IncDecExpr: Expression INC
   23           | Expression DEC

   24 $@2: %empty

   25 Block: '{' $@2 StatementList '}'

   26 IfStmt: IFCondition Block
   27       | IFCondition BlockELSE IfStmt
   28       | IFCondition BlockELSE Block

   29 IFCondition: IF Condition

   30 BlockELSE: Block ELSE

   31 $@3: %empty

   32 $@4: %empty

   33 WhileStmt: WHILE $@3 '(' Condition ')' $@4 Block

   34 Condition: Expression

   35 ForStmt: FOR '(' ForClause ')' Block

   36 $@5: %empty

   37 $@6: %empty

   38 ForClause: AssignmentStmt $@5 ExpressionStmt $@6 SimpleExpr

   39 SimpleExpr: AssignmentExpr
   40           | Expression
   41           | IncDecExpr

   42 $@7: %empty

   43 PrintStmt: PRINT $@7 '(' Expression ')' SEMICOLON

   44 Expression: Logical_OR_Expr

   45 Logical_OR_Expr: Logical_And_Expr
   46                | Logical_OR_Expr OR Logical_And_Expr

   47 Logical_And_Expr: Comparison_Expr
   48                 | Logical_And_Expr AND Comparison_Expr

   49 Comparison_Expr: Addition_Expr
   50                | Comparison_Expr Cmp_op Addition_Expr

   51 Addition_Expr: Multiplication_Expr
   52              | Addition_Expr Add_op Multiplication_Expr

   53 Multiplication_Expr: UnaryExpr
   54                    | Multiplication_Expr Mul_op UnaryExpr

   55 UnaryExpr: PrimaryExpr
   56          | Unary_op UnaryExpr

   57 PrimaryExpr: Operand
   58            | IndexExpr
   59            | ConversionExpr

   60 Operand: Literal
   61        | IDENT
   62        | '(' Expression ')'

   63 IndexExpr: PrimaryExpr '[' Expression ']'

   64 ConversionExpr: '(' Type ')' Expression

   65 Literal: INT_LIT
   66        | FLOAT_LIT
   67        | '"' STRING_LIT '"'
   68        | TRUE
   69        | FALSE

   70 Unary_op: '+'
   71         | '-'
   72         | '!'

   73 Cmp_op: EQL
   74       | NEQ
   75       | LSS
   76       | LEQ
   77       | GTR
   78       | GEQ

   79 Add_op: '+'
   80       | '-'

   81 Mul_op: '*'
   82       | QUO
   83       | REM

   84 Assign_op: ASSIGN
   85          | ADD_ASSIGN
   86          | SUB_ASSIGN
   87          | MUL_ASSIGN
   88          | QUO_ASSIGN
   89          | REM_ASSIGN

   90 Type: TypeName

   91 TypeName: INT
   92         | FLOAT
   93         | STRING
   94         | BOOL


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 72
    '"' (34) 67
    '(' (40) 33 35 43 62 64
    ')' (41) 33 35 43 62 64
    '*' (42) 81
    '+' (43) 70 79
    '-' (45) 71 80
    '[' (91) 14 16 63
    ']' (93) 14 16 63
    '{' (123) 25
    '}' (125) 25
    error (256)
    AND (258) 48
    OR (259) 46
    QUO (260) 82
    REM (261) 83
    INC (262) 22
    DEC (263) 23
    EQL (264) 73
    NEQ (265) 74
    LSS (266) 75
    LEQ (267) 76
    GTR (268) 77
    GEQ (269) 78
    ASSIGN (270) 15 16 84
    ADD_ASSIGN (271) 85
    SUB_ASSIGN (272) 86
    MUL_ASSIGN (273) 87
    QUO_ASSIGN (274) 88
    REM_ASSIGN (275) 89
    TRUE (276) 68
    FALSE (277) 69
    INT (278) 91
    FLOAT (279) 92
    BOOL (280) 94
    STRING (281) 93
    PRINT (282) 43
    IF (283) 29
    ELSE (284) 30
    FOR (285) 35
    WHILE (286) 33
    SEMICOLON (287) 13 14 15 16 17 18 21 43
    INT_LIT <i_val> (288) 65
    FLOAT_LIT <f_val> (289) 66
    STRING_LIT <s_val> (290) 67
    IDENT <id> (291) 13 14 15 16 61


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    Program (49)
        on left: 1
        on right: 0
    StatementList (50)
        on left: 2 3
        on right: 1 2 25
    Statement (51)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 2 3
    DeclarationStmt (52)
        on left: 13 14 15 16
        on right: 4
    ExpressionStmt (53)
        on left: 17
        on right: 5 38
    AssignmentStmt (54)
        on left: 18
        on right: 6 38
    AssignmentExpr <type> (55)
        on left: 20
        on right: 18 39
    $@1 (56)
        on left: 19
        on right: 20
    IncDecStmt (57)
        on left: 21
        on right: 7
    IncDecExpr (58)
        on left: 22 23
        on right: 21 41
    Block (59)
        on left: 25
        on right: 8 26 28 30 33 35
    $@2 (60)
        on left: 24
        on right: 25
    IfStmt (61)
        on left: 26 27 28
        on right: 9 27
    IFCondition (62)
        on left: 29
        on right: 26 27 28
    BlockELSE (63)
        on left: 30
        on right: 27 28
    WhileStmt (64)
        on left: 33
        on right: 10
    $@3 (65)
        on left: 31
        on right: 33
    $@4 (66)
        on left: 32
        on right: 33
    Condition (67)
        on left: 34
        on right: 29 33
    ForStmt (68)
        on left: 35
        on right: 11
    ForClause (69)
        on left: 38
        on right: 35
    $@5 (70)
        on left: 36
        on right: 38
    $@6 (71)
        on left: 37
        on right: 38
    SimpleExpr (72)
        on left: 39 40 41
        on right: 38
    PrintStmt (73)
        on left: 43
        on right: 12
    $@7 (74)
        on left: 42
        on right: 43
    Expression <type> (75)
        on left: 44
        on right: 14 15 16 17 20 22 23 34 40 43 62 63 64
    Logical_OR_Expr <type> (76)
        on left: 45 46
        on right: 44 46
    Logical_And_Expr <type> (77)
        on left: 47 48
        on right: 45 46 48
    Comparison_Expr <type> (78)
        on left: 49 50
        on right: 47 48 50
    Addition_Expr <type> (79)
        on left: 51 52
        on right: 49 50 52
    Multiplication_Expr <type> (80)
        on left: 53 54
        on right: 51 52 54
    UnaryExpr <type> (81)
        on left: 55 56
        on right: 53 54 56
    PrimaryExpr <type> (82)
        on left: 57 58 59
        on right: 55 63
    Operand <type> (83)
        on left: 60 61 62
        on right: 57
    IndexExpr <type> (84)
        on left: 63
        on right: 58
    ConversionExpr <type> (85)
        on left: 64
        on right: 59
    Literal <type> (86)
        on left: 65 66 67 68 69
        on right: 60
    Unary_op <operator> (87)
        on left: 70 71 72
        on right: 56
    Cmp_op <operator> (88)
        on left: 73 74 75 76 77 78
        on right: 50
    Add_op <operator> (89)
        on left: 79 80
        on right: 52
    Mul_op <operator> (90)
        on left: 81 82 83
        on right: 54
    Assign_op <operator> (91)
        on left: 84 85 86 87 88 89
        on right: 20
    Type <type> (92)
        on left: 90
        on right: 13 14 15 16 64
    TypeName <type> (93)
        on left: 91 92 93 94
        on right: 90


State 0

    0 $accept: . Program $end

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    PRINT      shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '{'        shift, and go to state 14
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Program              go to state 20
    StatementList        go to state 21
    Statement            go to state 22
    DeclarationStmt      go to state 23
    ExpressionStmt       go to state 24
    AssignmentStmt       go to state 25
    AssignmentExpr       go to state 26
    IncDecStmt           go to state 27
    IncDecExpr           go to state 28
    Block                go to state 29
    IfStmt               go to state 30
    IFCondition          go to state 31
    WhileStmt            go to state 32
    ForStmt              go to state 33
    PrintStmt            go to state 34
    Expression           go to state 35
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47
    Type                 go to state 48
    TypeName             go to state 49


State 1

   68 Literal: TRUE .

    $default  reduce using rule 68 (Literal)


State 2

   69 Literal: FALSE .

    $default  reduce using rule 69 (Literal)


State 3

   91 TypeName: INT .

    $default  reduce using rule 91 (TypeName)


State 4

   92 TypeName: FLOAT .

    $default  reduce using rule 92 (TypeName)


State 5

   94 TypeName: BOOL .

    $default  reduce using rule 94 (TypeName)


State 6

   93 TypeName: STRING .

    $default  reduce using rule 93 (TypeName)


State 7

   43 PrintStmt: PRINT . $@7 '(' Expression ')' SEMICOLON

    $default  reduce using rule 42 ($@7)

    $@7  go to state 50


State 8

   29 IFCondition: IF . Condition

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Condition            go to state 51
    Expression           go to state 52
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 9

   35 ForStmt: FOR . '(' ForClause ')' Block

    '('  shift, and go to state 53


State 10

   33 WhileStmt: WHILE . $@3 '(' Condition ')' $@4 Block

    $default  reduce using rule 31 ($@3)

    $@3  go to state 54


State 11

   65 Literal: INT_LIT .

    $default  reduce using rule 65 (Literal)


State 12

   66 Literal: FLOAT_LIT .

    $default  reduce using rule 66 (Literal)


State 13

   61 Operand: IDENT .

    $default  reduce using rule 61 (Operand)


State 14

   25 Block: '{' . $@2 StatementList '}'

    $default  reduce using rule 24 ($@2)

    $@2  go to state 55


State 15

   62 Operand: '(' . Expression ')'
   64 ConversionExpr: '(' . Type ')' Expression

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Expression           go to state 56
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47
    Type                 go to state 57
    TypeName             go to state 49


State 16

   67 Literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 58


State 17

   70 Unary_op: '+' .

    $default  reduce using rule 70 (Unary_op)


State 18

   71 Unary_op: '-' .

    $default  reduce using rule 71 (Unary_op)


State 19

   72 Unary_op: '!' .

    $default  reduce using rule 72 (Unary_op)


State 20

    0 $accept: Program . $end

    $end  shift, and go to state 59


State 21

    1 Program: StatementList .

    $default  reduce using rule 1 (Program)


State 22

    2 StatementList: Statement . StatementList
    3              | Statement .

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    PRINT      shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '{'        shift, and go to state 14
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    $default  reduce using rule 3 (StatementList)

    StatementList        go to state 60
    Statement            go to state 22
    DeclarationStmt      go to state 23
    ExpressionStmt       go to state 24
    AssignmentStmt       go to state 25
    AssignmentExpr       go to state 26
    IncDecStmt           go to state 27
    IncDecExpr           go to state 28
    Block                go to state 29
    IfStmt               go to state 30
    IFCondition          go to state 31
    WhileStmt            go to state 32
    ForStmt              go to state 33
    PrintStmt            go to state 34
    Expression           go to state 35
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47
    Type                 go to state 48
    TypeName             go to state 49


State 23

    4 Statement: DeclarationStmt .

    $default  reduce using rule 4 (Statement)


State 24

    5 Statement: ExpressionStmt .

    $default  reduce using rule 5 (Statement)


State 25

    6 Statement: AssignmentStmt .

    $default  reduce using rule 6 (Statement)


State 26

   18 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 27

    7 Statement: IncDecStmt .

    $default  reduce using rule 7 (Statement)


State 28

   21 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 29

    8 Statement: Block .

    $default  reduce using rule 8 (Statement)


State 30

    9 Statement: IfStmt .

    $default  reduce using rule 9 (Statement)


State 31

   26 IfStmt: IFCondition . Block
   27       | IFCondition . BlockELSE IfStmt
   28       | IFCondition . BlockELSE Block

    '{'  shift, and go to state 14

    Block      go to state 63
    BlockELSE  go to state 64


State 32

   10 Statement: WhileStmt .

    $default  reduce using rule 10 (Statement)


State 33

   11 Statement: ForStmt .

    $default  reduce using rule 11 (Statement)


State 34

   12 Statement: PrintStmt .

    $default  reduce using rule 12 (Statement)


State 35

   17 ExpressionStmt: Expression . SEMICOLON
   20 AssignmentExpr: Expression . $@1 Assign_op Expression
   22 IncDecExpr: Expression . INC
   23           | Expression . DEC

    INC        shift, and go to state 65
    DEC        shift, and go to state 66
    SEMICOLON  shift, and go to state 67

    $default  reduce using rule 19 ($@1)

    $@1  go to state 68


State 36

   44 Expression: Logical_OR_Expr .
   46 Logical_OR_Expr: Logical_OR_Expr . OR Logical_And_Expr

    OR  shift, and go to state 69

    OR        [reduce using rule 44 (Expression)]
    $default  reduce using rule 44 (Expression)


State 37

   45 Logical_OR_Expr: Logical_And_Expr .
   48 Logical_And_Expr: Logical_And_Expr . AND Comparison_Expr

    AND  shift, and go to state 70

    AND       [reduce using rule 45 (Logical_OR_Expr)]
    $default  reduce using rule 45 (Logical_OR_Expr)


State 38

   47 Logical_And_Expr: Comparison_Expr .
   50 Comparison_Expr: Comparison_Expr . Cmp_op Addition_Expr

    EQL  shift, and go to state 71
    NEQ  shift, and go to state 72
    LSS  shift, and go to state 73
    LEQ  shift, and go to state 74
    GTR  shift, and go to state 75
    GEQ  shift, and go to state 76

    EQL       [reduce using rule 47 (Logical_And_Expr)]
    NEQ       [reduce using rule 47 (Logical_And_Expr)]
    LSS       [reduce using rule 47 (Logical_And_Expr)]
    LEQ       [reduce using rule 47 (Logical_And_Expr)]
    GTR       [reduce using rule 47 (Logical_And_Expr)]
    GEQ       [reduce using rule 47 (Logical_And_Expr)]
    $default  reduce using rule 47 (Logical_And_Expr)

    Cmp_op  go to state 77


State 39

   49 Comparison_Expr: Addition_Expr .
   52 Addition_Expr: Addition_Expr . Add_op Multiplication_Expr

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 49 (Comparison_Expr)]
    '-'       [reduce using rule 49 (Comparison_Expr)]
    $default  reduce using rule 49 (Comparison_Expr)

    Add_op  go to state 80


State 40

   51 Addition_Expr: Multiplication_Expr .
   54 Multiplication_Expr: Multiplication_Expr . Mul_op UnaryExpr

    QUO  shift, and go to state 81
    REM  shift, and go to state 82
    '*'  shift, and go to state 83

    QUO       [reduce using rule 51 (Addition_Expr)]
    REM       [reduce using rule 51 (Addition_Expr)]
    '*'       [reduce using rule 51 (Addition_Expr)]
    $default  reduce using rule 51 (Addition_Expr)

    Mul_op  go to state 84


State 41

   53 Multiplication_Expr: UnaryExpr .

    $default  reduce using rule 53 (Multiplication_Expr)


State 42

   55 UnaryExpr: PrimaryExpr .
   63 IndexExpr: PrimaryExpr . '[' Expression ']'

    '['  shift, and go to state 85

    '['       [reduce using rule 55 (UnaryExpr)]
    $default  reduce using rule 55 (UnaryExpr)


State 43

   57 PrimaryExpr: Operand .

    $default  reduce using rule 57 (PrimaryExpr)


State 44

   58 PrimaryExpr: IndexExpr .

    $default  reduce using rule 58 (PrimaryExpr)


State 45

   59 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 59 (PrimaryExpr)


State 46

   60 Operand: Literal .

    $default  reduce using rule 60 (Operand)


State 47

   56 UnaryExpr: Unary_op . UnaryExpr

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    UnaryExpr       go to state 86
    PrimaryExpr     go to state 42
    Operand         go to state 43
    IndexExpr       go to state 44
    ConversionExpr  go to state 45
    Literal         go to state 46
    Unary_op        go to state 47


State 48

   13 DeclarationStmt: Type . IDENT SEMICOLON
   14                | Type . IDENT '[' Expression ']' SEMICOLON
   15                | Type . IDENT ASSIGN Expression SEMICOLON
   16                | Type . IDENT '[' Expression ']' ASSIGN Expression SEMICOLON

    IDENT  shift, and go to state 87


State 49

   90 Type: TypeName .

    $default  reduce using rule 90 (Type)


State 50

   43 PrintStmt: PRINT $@7 . '(' Expression ')' SEMICOLON

    '('  shift, and go to state 88


State 51

   29 IFCondition: IF Condition .

    $default  reduce using rule 29 (IFCondition)


State 52

   34 Condition: Expression .

    $default  reduce using rule 34 (Condition)


State 53

   35 ForStmt: FOR '(' . ForClause ')' Block

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    AssignmentStmt       go to state 89
    AssignmentExpr       go to state 26
    ForClause            go to state 90
    Expression           go to state 91
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 54

   33 WhileStmt: WHILE $@3 . '(' Condition ')' $@4 Block

    '('  shift, and go to state 92


State 55

   25 Block: '{' $@2 . StatementList '}'

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    PRINT      shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '{'        shift, and go to state 14
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    StatementList        go to state 93
    Statement            go to state 22
    DeclarationStmt      go to state 23
    ExpressionStmt       go to state 24
    AssignmentStmt       go to state 25
    AssignmentExpr       go to state 26
    IncDecStmt           go to state 27
    IncDecExpr           go to state 28
    Block                go to state 29
    IfStmt               go to state 30
    IFCondition          go to state 31
    WhileStmt            go to state 32
    ForStmt              go to state 33
    PrintStmt            go to state 34
    Expression           go to state 35
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47
    Type                 go to state 48
    TypeName             go to state 49


State 56

   62 Operand: '(' Expression . ')'

    ')'  shift, and go to state 94


State 57

   64 ConversionExpr: '(' Type . ')' Expression

    ')'  shift, and go to state 95


State 58

   67 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 96


State 59

    0 $accept: Program $end .

    $default  accept


State 60

    2 StatementList: Statement StatementList .

    $default  reduce using rule 2 (StatementList)


State 61

   18 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 18 (AssignmentStmt)


State 62

   21 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 21 (IncDecStmt)


State 63

   26 IfStmt: IFCondition Block .
   30 BlockELSE: Block . ELSE

    ELSE  shift, and go to state 97

    $default  reduce using rule 26 (IfStmt)


State 64

   27 IfStmt: IFCondition BlockELSE . IfStmt
   28       | IFCondition BlockELSE . Block

    IF   shift, and go to state 8
    '{'  shift, and go to state 14

    Block        go to state 98
    IfStmt       go to state 99
    IFCondition  go to state 31


State 65

   22 IncDecExpr: Expression INC .

    $default  reduce using rule 22 (IncDecExpr)


State 66

   23 IncDecExpr: Expression DEC .

    $default  reduce using rule 23 (IncDecExpr)


State 67

   17 ExpressionStmt: Expression SEMICOLON .

    $default  reduce using rule 17 (ExpressionStmt)


State 68

   20 AssignmentExpr: Expression $@1 . Assign_op Expression

    ASSIGN      shift, and go to state 100
    ADD_ASSIGN  shift, and go to state 101
    SUB_ASSIGN  shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    QUO_ASSIGN  shift, and go to state 104
    REM_ASSIGN  shift, and go to state 105

    Assign_op  go to state 106


State 69

   46 Logical_OR_Expr: Logical_OR_Expr OR . Logical_And_Expr

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Logical_And_Expr     go to state 107
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 70

   48 Logical_And_Expr: Logical_And_Expr AND . Comparison_Expr

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Comparison_Expr      go to state 108
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 71

   73 Cmp_op: EQL .

    $default  reduce using rule 73 (Cmp_op)


State 72

   74 Cmp_op: NEQ .

    $default  reduce using rule 74 (Cmp_op)


State 73

   75 Cmp_op: LSS .

    $default  reduce using rule 75 (Cmp_op)


State 74

   76 Cmp_op: LEQ .

    $default  reduce using rule 76 (Cmp_op)


State 75

   77 Cmp_op: GTR .

    $default  reduce using rule 77 (Cmp_op)


State 76

   78 Cmp_op: GEQ .

    $default  reduce using rule 78 (Cmp_op)


State 77

   50 Comparison_Expr: Comparison_Expr Cmp_op . Addition_Expr

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Addition_Expr        go to state 109
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 78

   79 Add_op: '+' .

    $default  reduce using rule 79 (Add_op)


State 79

   80 Add_op: '-' .

    $default  reduce using rule 80 (Add_op)


State 80

   52 Addition_Expr: Addition_Expr Add_op . Multiplication_Expr

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Multiplication_Expr  go to state 110
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 81

   82 Mul_op: QUO .

    $default  reduce using rule 82 (Mul_op)


State 82

   83 Mul_op: REM .

    $default  reduce using rule 83 (Mul_op)


State 83

   81 Mul_op: '*' .

    $default  reduce using rule 81 (Mul_op)


State 84

   54 Multiplication_Expr: Multiplication_Expr Mul_op . UnaryExpr

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    UnaryExpr       go to state 111
    PrimaryExpr     go to state 42
    Operand         go to state 43
    IndexExpr       go to state 44
    ConversionExpr  go to state 45
    Literal         go to state 46
    Unary_op        go to state 47


State 85

   63 IndexExpr: PrimaryExpr '[' . Expression ']'

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Expression           go to state 112
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 86

   56 UnaryExpr: Unary_op UnaryExpr .

    $default  reduce using rule 56 (UnaryExpr)


State 87

   13 DeclarationStmt: Type IDENT . SEMICOLON
   14                | Type IDENT . '[' Expression ']' SEMICOLON
   15                | Type IDENT . ASSIGN Expression SEMICOLON
   16                | Type IDENT . '[' Expression ']' ASSIGN Expression SEMICOLON

    ASSIGN     shift, and go to state 113
    SEMICOLON  shift, and go to state 114
    '['        shift, and go to state 115


State 88

   43 PrintStmt: PRINT $@7 '(' . Expression ')' SEMICOLON

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Expression           go to state 116
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 89

   38 ForClause: AssignmentStmt . $@5 ExpressionStmt $@6 SimpleExpr

    $default  reduce using rule 36 ($@5)

    $@5  go to state 117


State 90

   35 ForStmt: FOR '(' ForClause . ')' Block

    ')'  shift, and go to state 118


State 91

   20 AssignmentExpr: Expression . $@1 Assign_op Expression

    $default  reduce using rule 19 ($@1)

    $@1  go to state 68


State 92

   33 WhileStmt: WHILE $@3 '(' . Condition ')' $@4 Block

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Condition            go to state 119
    Expression           go to state 52
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 93

   25 Block: '{' $@2 StatementList . '}'

    '}'  shift, and go to state 120


State 94

   62 Operand: '(' Expression ')' .

    $default  reduce using rule 62 (Operand)


State 95

   64 ConversionExpr: '(' Type ')' . Expression

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Expression           go to state 121
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 96

   67 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 67 (Literal)


State 97

   30 BlockELSE: Block ELSE .

    $default  reduce using rule 30 (BlockELSE)


State 98

   28 IfStmt: IFCondition BlockELSE Block .

    $default  reduce using rule 28 (IfStmt)


State 99

   27 IfStmt: IFCondition BlockELSE IfStmt .

    $default  reduce using rule 27 (IfStmt)


State 100

   84 Assign_op: ASSIGN .

    $default  reduce using rule 84 (Assign_op)


State 101

   85 Assign_op: ADD_ASSIGN .

    $default  reduce using rule 85 (Assign_op)


State 102

   86 Assign_op: SUB_ASSIGN .

    $default  reduce using rule 86 (Assign_op)


State 103

   87 Assign_op: MUL_ASSIGN .

    $default  reduce using rule 87 (Assign_op)


State 104

   88 Assign_op: QUO_ASSIGN .

    $default  reduce using rule 88 (Assign_op)


State 105

   89 Assign_op: REM_ASSIGN .

    $default  reduce using rule 89 (Assign_op)


State 106

   20 AssignmentExpr: Expression $@1 Assign_op . Expression

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Expression           go to state 122
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 107

   46 Logical_OR_Expr: Logical_OR_Expr OR Logical_And_Expr .
   48 Logical_And_Expr: Logical_And_Expr . AND Comparison_Expr

    AND  shift, and go to state 70

    AND       [reduce using rule 46 (Logical_OR_Expr)]
    $default  reduce using rule 46 (Logical_OR_Expr)


State 108

   48 Logical_And_Expr: Logical_And_Expr AND Comparison_Expr .
   50 Comparison_Expr: Comparison_Expr . Cmp_op Addition_Expr

    EQL  shift, and go to state 71
    NEQ  shift, and go to state 72
    LSS  shift, and go to state 73
    LEQ  shift, and go to state 74
    GTR  shift, and go to state 75
    GEQ  shift, and go to state 76

    EQL       [reduce using rule 48 (Logical_And_Expr)]
    NEQ       [reduce using rule 48 (Logical_And_Expr)]
    LSS       [reduce using rule 48 (Logical_And_Expr)]
    LEQ       [reduce using rule 48 (Logical_And_Expr)]
    GTR       [reduce using rule 48 (Logical_And_Expr)]
    GEQ       [reduce using rule 48 (Logical_And_Expr)]
    $default  reduce using rule 48 (Logical_And_Expr)

    Cmp_op  go to state 77


State 109

   50 Comparison_Expr: Comparison_Expr Cmp_op Addition_Expr .
   52 Addition_Expr: Addition_Expr . Add_op Multiplication_Expr

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 50 (Comparison_Expr)]
    '-'       [reduce using rule 50 (Comparison_Expr)]
    $default  reduce using rule 50 (Comparison_Expr)

    Add_op  go to state 80


State 110

   52 Addition_Expr: Addition_Expr Add_op Multiplication_Expr .
   54 Multiplication_Expr: Multiplication_Expr . Mul_op UnaryExpr

    QUO  shift, and go to state 81
    REM  shift, and go to state 82
    '*'  shift, and go to state 83

    QUO       [reduce using rule 52 (Addition_Expr)]
    REM       [reduce using rule 52 (Addition_Expr)]
    '*'       [reduce using rule 52 (Addition_Expr)]
    $default  reduce using rule 52 (Addition_Expr)

    Mul_op  go to state 84


State 111

   54 Multiplication_Expr: Multiplication_Expr Mul_op UnaryExpr .

    $default  reduce using rule 54 (Multiplication_Expr)


State 112

   63 IndexExpr: PrimaryExpr '[' Expression . ']'

    ']'  shift, and go to state 123


State 113

   15 DeclarationStmt: Type IDENT ASSIGN . Expression SEMICOLON

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Expression           go to state 124
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 114

   13 DeclarationStmt: Type IDENT SEMICOLON .

    $default  reduce using rule 13 (DeclarationStmt)


State 115

   14 DeclarationStmt: Type IDENT '[' . Expression ']' SEMICOLON
   16                | Type IDENT '[' . Expression ']' ASSIGN Expression SEMICOLON

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Expression           go to state 125
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 116

   43 PrintStmt: PRINT $@7 '(' Expression . ')' SEMICOLON

    ')'  shift, and go to state 126


State 117

   38 ForClause: AssignmentStmt $@5 . ExpressionStmt $@6 SimpleExpr

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    ExpressionStmt       go to state 127
    Expression           go to state 128
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 118

   35 ForStmt: FOR '(' ForClause ')' . Block

    '{'  shift, and go to state 14

    Block  go to state 129


State 119

   33 WhileStmt: WHILE $@3 '(' Condition . ')' $@4 Block

    ')'  shift, and go to state 130


State 120

   25 Block: '{' $@2 StatementList '}' .

    $default  reduce using rule 25 (Block)


State 121

   64 ConversionExpr: '(' Type ')' Expression .

    $default  reduce using rule 64 (ConversionExpr)


State 122

   20 AssignmentExpr: Expression $@1 Assign_op Expression .

    $default  reduce using rule 20 (AssignmentExpr)


State 123

   63 IndexExpr: PrimaryExpr '[' Expression ']' .

    $default  reduce using rule 63 (IndexExpr)


State 124

   15 DeclarationStmt: Type IDENT ASSIGN Expression . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 125

   14 DeclarationStmt: Type IDENT '[' Expression . ']' SEMICOLON
   16                | Type IDENT '[' Expression . ']' ASSIGN Expression SEMICOLON

    ']'  shift, and go to state 132


State 126

   43 PrintStmt: PRINT $@7 '(' Expression ')' . SEMICOLON

    SEMICOLON  shift, and go to state 133


State 127

   38 ForClause: AssignmentStmt $@5 ExpressionStmt . $@6 SimpleExpr

    $default  reduce using rule 37 ($@6)

    $@6  go to state 134


State 128

   17 ExpressionStmt: Expression . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 129

   35 ForStmt: FOR '(' ForClause ')' Block .

    $default  reduce using rule 35 (ForStmt)


State 130

   33 WhileStmt: WHILE $@3 '(' Condition ')' . $@4 Block

    $default  reduce using rule 32 ($@4)

    $@4  go to state 135


State 131

   15 DeclarationStmt: Type IDENT ASSIGN Expression SEMICOLON .

    $default  reduce using rule 15 (DeclarationStmt)


State 132

   14 DeclarationStmt: Type IDENT '[' Expression ']' . SEMICOLON
   16                | Type IDENT '[' Expression ']' . ASSIGN Expression SEMICOLON

    ASSIGN     shift, and go to state 136
    SEMICOLON  shift, and go to state 137


State 133

   43 PrintStmt: PRINT $@7 '(' Expression ')' SEMICOLON .

    $default  reduce using rule 43 (PrintStmt)


State 134

   38 ForClause: AssignmentStmt $@5 ExpressionStmt $@6 . SimpleExpr

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    AssignmentExpr       go to state 138
    IncDecExpr           go to state 139
    SimpleExpr           go to state 140
    Expression           go to state 141
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 135

   33 WhileStmt: WHILE $@3 '(' Condition ')' $@4 . Block

    '{'  shift, and go to state 14

    Block  go to state 142


State 136

   16 DeclarationStmt: Type IDENT '[' Expression ']' ASSIGN . Expression SEMICOLON

    TRUE       shift, and go to state 1
    FALSE      shift, and go to state 2
    INT_LIT    shift, and go to state 11
    FLOAT_LIT  shift, and go to state 12
    IDENT      shift, and go to state 13
    '('        shift, and go to state 15
    '"'        shift, and go to state 16
    '+'        shift, and go to state 17
    '-'        shift, and go to state 18
    '!'        shift, and go to state 19

    Expression           go to state 143
    Logical_OR_Expr      go to state 36
    Logical_And_Expr     go to state 37
    Comparison_Expr      go to state 38
    Addition_Expr        go to state 39
    Multiplication_Expr  go to state 40
    UnaryExpr            go to state 41
    PrimaryExpr          go to state 42
    Operand              go to state 43
    IndexExpr            go to state 44
    ConversionExpr       go to state 45
    Literal              go to state 46
    Unary_op             go to state 47


State 137

   14 DeclarationStmt: Type IDENT '[' Expression ']' SEMICOLON .

    $default  reduce using rule 14 (DeclarationStmt)


State 138

   39 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 39 (SimpleExpr)


State 139

   41 SimpleExpr: IncDecExpr .

    $default  reduce using rule 41 (SimpleExpr)


State 140

   38 ForClause: AssignmentStmt $@5 ExpressionStmt $@6 SimpleExpr .

    $default  reduce using rule 38 (ForClause)


State 141

   20 AssignmentExpr: Expression . $@1 Assign_op Expression
   22 IncDecExpr: Expression . INC
   23           | Expression . DEC
   40 SimpleExpr: Expression .

    INC  shift, and go to state 65
    DEC  shift, and go to state 66

    ')'       reduce using rule 40 (SimpleExpr)
    $default  reduce using rule 19 ($@1)

    $@1  go to state 68


State 142

   33 WhileStmt: WHILE $@3 '(' Condition ')' $@4 Block .

    $default  reduce using rule 33 (WhileStmt)


State 143

   16 DeclarationStmt: Type IDENT '[' Expression ']' ASSIGN Expression . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 144

   16 DeclarationStmt: Type IDENT '[' Expression ']' ASSIGN Expression SEMICOLON .

    $default  reduce using rule 16 (DeclarationStmt)
